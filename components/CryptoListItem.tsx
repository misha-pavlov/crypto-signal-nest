import { HStack, View, Text } from "@gluestack-ui/themed";
import FastImage from "react-native-fast-image";
import { FC, memo, useEffect, useState } from "react";
import { LineGraph } from "react-native-graph";
import { Octicons } from "@expo/vector-icons";
import { TouchableOpacity } from "react-native";
import { createShimmerPlaceholder } from "react-native-shimmer-placeholder";
import { LinearGradient } from "expo-linear-gradient";
import { colors } from "../config/colors";
import {
  getPriceHistory,
  getTimePrices,
  hexToRgba,
  trainAndPredict,
  getPercentAndColor,
} from "../helpers";
import { Crypto, ForecastType } from "../types/Crypto.types";

type CryptoListItemPropsType = {
  crypto: Crypto;
  showRecommendation?: boolean;
  isSelectionList?: boolean;
  left?: boolean;
  right?: boolean;
  isSelected?: boolean;
  onLongPress?: VoidFunction;
  onLeftSelect?: VoidFunction;
  onRightSelect?: VoidFunction;
  onRowPress?: (forecast: ForecastType) => void;
};

const ShimmerPlaceholder = createShimmerPlaceholder(LinearGradient);

const CryptoListItem: FC<CryptoListItemPropsType> = ({
  showRecommendation,
  isSelectionList,
  left,
  right,
  isSelected,
  crypto,
  onLongPress,
  onLeftSelect,
  onRightSelect,
  onRowPress,
}) => {
  const [forecast, setForecast] = useState({
    buyPercentage: 0,
    sellPercentage: 0,
    holdPercentage: 0,
  });
  const [isRecommendationLoading, setIsRecommendationLoading] = useState(true);

  useEffect(() => {
    if (showRecommendation) {
      const abortController = new AbortController();

      const forecast = async () => {
        const timePrices = getTimePrices(chartMock);
        const predictTime = new Date(+new Date() + 86400000).getTime() / 1000;
        const result = await trainAndPredict(timePrices, predictTime);
        setForecast(result);
        setIsRecommendationLoading(false);
      };

      forecast();

      () => abortController.abort();
    }
  }, [showRecommendation]);

  const recommendation = showRecommendation
    ? getPercentAndColor(forecast)
    : null;
  const chartColor = recommendation?.color || colors.primaryBlack;

  return (
    <TouchableOpacity
      onLongPress={onLongPress}
      disabled={!!!onRowPress}
      onPress={() => onRowPress && onRowPress(forecast)}
    >
      <HStack
        alignItems="center"
        justifyContent={isSelectionList && right ? "space-between" : undefined}
      >
        {isSelectionList && left && (
          <TouchableOpacity onPress={onLeftSelect}>
            <View
              borderWidth={1}
              borderColor={isSelected ? colors.primaryGreen : colors.white}
              backgroundColor={
                isSelected ? colors.primaryGreen : colors.primaryBlack
              }
              w={20}
              h={20}
              borderRadius="$full"
              mr={16}
              alignItems="center"
              justifyContent="center"
            >
              <Octicons name="check" size={14} color={colors.primaryBlack} />
            </View>
          </TouchableOpacity>
        )}

        <HStack alignItems="center" space="sm" w={100} mr="22%">
          <FastImage
            style={{ width: 28, height: 28 }}
            source={{
              uri: crypto.icon,
              priority: FastImage.priority.high,
            }}
            resizeMode={FastImage.resizeMode.contain}
          />

          <View>
            <Text color={colors.white} fontSize={14} lineHeight={17}>
              {crypto.name}
            </Text>
            <Text
              color={hexToRgba(colors.white, 0.5)}
              fontSize={14}
              lineHeight={17}
            >
              {crypto.symbol}
            </Text>
          </View>
        </HStack>

        {showRecommendation && !isSelectionList && (
          <View mr="10%">
            {isRecommendationLoading ? (
              <ShimmerPlaceholder
                width={57}
                style={{ borderRadius: 50 }}
                shimmerColors={[colors.primaryGreen, colors.red, colors.white]}
              />
            ) : (
              <Text
                fontSize={14}
                lineHeight={17}
                fontFamily="$bold"
                color={recommendation?.color}
              >
                {recommendation?.percent}% {recommendation?.action}
              </Text>
            )}
          </View>
        )}

        {showRecommendation && !isSelectionList && (
          <View>
            {isRecommendationLoading ? (
              <ShimmerPlaceholder
                width={87}
                style={{ borderRadius: 50 }}
                shimmerColors={[colors.primaryGreen, colors.red, colors.white]}
              />
            ) : (
              <LineGraph
                points={getPriceHistory(chartMock)}
                color={chartColor}
                enableFadeInMask
                animated
                lineThickness={1}
                style={{ width: 87, height: 37 }}
                gradientFillColors={[
                  hexToRgba(chartColor, 0.2),
                  hexToRgba(chartColor, 0.1),
                  hexToRgba(chartColor, 0.1),
                ]}
              />
            )}
          </View>
        )}

        {isSelectionList && right && (
          <TouchableOpacity onPress={onRightSelect}>
            <View>
              <Octicons
                name={isSelected ? "check" : "plus"}
                size={20}
                color={colors.white}
              />
            </View>
          </TouchableOpacity>
        )}
      </HStack>
    </TouchableOpacity>
  );
};

export default memo(CryptoListItem);

const chartMock = [
  [1704075000, 42552.5121, 1, 18.5029],
  [1704075300, 42552.1276, 1, 18.5063],
  [1704075600, 42536.49, 1, 18.5182],
  [1704075900, 42544.9101, 1, 18.5149],
  [1704076200, 42539.0311, 1, 18.5172],
  [1704076500, 42600.162, 1, 18.5398],
  [1704076800, 42579.072, 1, 18.5169],
  [1704077100, 42536.0252, 1, 18.5333],
  [1704077400, 42517.1929, 1, 18.5362],
  [1704077700, 42569.8135, 1, 18.5501],
  [1704078000, 42578.3964, 1, 18.564],
  [1704078300, 42564.1409, 1, 18.5513],
  [1704078600, 42547.925, 1, 18.5592],
  [1704078900, 42513.7804, 1, 18.5624],
  [1704079200, 42469.802, 1, 18.5813],
  [1704079500, 42440.3896, 1, 18.5838],
  [1704079800, 42428.3878, 1, 18.5901],
  [1704080100, 42410.9496, 1, 18.5884],
  [1704080400, 42398.533, 1, 18.582],
  [1704080700, 42305.8579, 1, 18.5897],
  [1704081000, 42335.5584, 1, 18.5937],
  [1704081300, 42316.4964, 1, 18.6141],
  [1704081600, 42332.582, 1, 18.6118],
  [1704081900, 42358.4711, 1, 18.5966],
  [1704082200, 42360.3026, 1, 18.5909],
  [1704082500, 42302.0247, 1, 18.6084],
  [1704082800, 42269.1125, 1, 18.6047],
  [1704083100, 42300.6544, 1, 18.611],
  [1704083400, 42296.6948, 1, 18.6149],
  [1704083700, 42322.128, 1, 18.6021],
  [1704084000, 42334.0356, 1, 18.6061],
  [1704084300, 42316.0957, 1, 18.6051],
  [1704084600, 42352.5043, 1, 18.6057],
  [1704084900, 42360.0349, 1, 18.5963],
  [1704085200, 42393.7681, 1, 18.5957],
  [1704085500, 42328.7816, 1, 18.5885],
  [1704085800, 42340.7913, 1, 18.5665],
  [1704086100, 42344.1908, 1, 18.5566],
  [1704086400, 42350.5834, 1, 18.558],
  [1704086700, 42339.4345, 1, 18.5617],
  [1704087000, 42302.9328, 1, 18.5618],
  [1704087300, 42318.1982, 1, 18.5578],
  [1704087600, 42282.8867, 1, 18.5564],
  [1704087900, 42301.6197, 1, 18.5566],
  [1704088200, 42244.9714, 1, 18.5573],
  [1704088500, 42229.5348, 1, 18.5542],
  [1704088800, 42221.7523, 1, 18.5481],
  [1704089100, 42269.3047, 1, 18.5622],
  [1704089400, 42289.9849, 1, 18.5668],
  [1704089700, 42278.4865, 1, 18.5637],
  [1704090000, 42340.5968, 1, 18.5703],
  [1704090300, 42311.1447, 1, 18.5834],
  [1704090600, 42320.4226, 1, 18.5895],
  [1704090900, 42334.4152, 1, 18.5794],
  [1704091200, 42356.0205, 1, 18.5782],
  [1704091500, 42381.2793, 1, 18.5667],
  [1704091800, 42382.9839, 1, 18.5693],
  [1704092100, 42417.5388, 1, 18.5734],
  [1704092400, 42403.1517, 1, 18.5727],
  [1704092700, 42442.0809, 1, 18.5655],
  [1704093000, 42473.3329, 1, 18.5812],
  [1704093300, 42455.2308, 1, 18.5777],
  [1704093600, 42456.1804, 1, 18.5778],
  [1704093900, 42461.5261, 1, 18.5799],
  [1704094200, 42484.9918, 1, 18.5886],
  [1704094500, 42496.59, 1, 18.5803],
  [1704094800, 42499.0349, 1, 18.5771],
  [1704095100, 42453.6709, 1, 18.5738],
  [1704095400, 42466.3706, 1, 18.5914],
  [1704095700, 42472.7571, 1, 18.5863],
  [1704096000, 42487.8096, 1, 18.5946],
  [1704096300, 42464.1204, 1, 18.5803],
  [1704096600, 42485.874, 1, 18.5897],
  [1704096900, 42512.5791, 1, 18.6016],
  [1704097200, 42515.7771, 1, 18.6047],
  [1704097500, 42515.1708, 1, 18.5854],
  [1704097800, 42484.673, 1, 18.6073],
  [1704098100, 42473.7748, 1, 18.6146],
  [1704098400, 42477.1279, 1, 18.6195],
  [1704098700, 42494.5649, 1, 18.6185],
  [1704099000, 42521.967, 1, 18.6152],
  [1704099300, 42542.6816, 1, 18.6091],
  [1704099600, 42549.7244, 1, 18.6035],
  [1704099900, 42570.6739, 1, 18.5867],
  [1704100200, 42551.2766, 1, 18.5792],
  [1704100500, 42570.7615, 1, 18.5855],
  [1704100800, 42590.9746, 1, 18.597],
  [1704101100, 42641.2103, 1, 18.6136],
  [1704101400, 42603.2389, 1, 18.596],
  [1704101700, 42655.2718, 1, 18.5889],
  [1704102000, 42685.7166, 1, 18.5852],
  [1704102300, 42641.612, 1, 18.5527],
  [1704102600, 42651.8951, 1, 18.5522],
  [1704102900, 42647.9485, 1, 18.5398],
  [1704103200, 42648.8094, 1, 18.5415],
  [1704103500, 42647.5908, 1, 18.5331],
  [1704103800, 42664.159, 1, 18.5373],
  [1704104100, 42669.0598, 1, 18.538],
  [1704104400, 42644.7325, 1, 18.5486],
  [1704104700, 42673.4608, 1, 18.5542],
  [1704105000, 42671.6985, 1, 18.5509],
  [1704105300, 42690.675, 1, 18.5506],
  [1704105600, 42685.7257, 1, 18.5514],
  [1704105900, 42716.1147, 1, 18.5612],
  [1704106200, 42722.6133, 1, 18.5524],
  [1704106500, 42721.4101, 1, 18.5503],
  [1704106800, 42695.2687, 1, 18.5396],
  [1704107100, 42752.7637, 1, 18.5664],
  [1704107400, 42751.1404, 1, 18.5413],
  [1704107700, 42700.9831, 1, 18.5251],
  [1704108000, 42699.3652, 1, 18.5294],
  [1704108300, 42664.4161, 1, 18.5215],
  [1704108600, 42683.9386, 1, 18.5363],
  [1704108900, 42648.6404, 1, 18.5193],
  [1704109200, 42643.1662, 1, 18.5206],
  [1704109500, 42607.8186, 1, 18.5181],
  [1704109800, 42615.6556, 1, 18.5232],
  [1704110100, 42647.3461, 1, 18.5215],
  [1704110400, 42695.6839, 1, 18.5214],
  [1704110700, 42694.1208, 1, 18.5234],
  [1704111000, 42654.6246, 1, 18.5211],
  [1704111300, 42624.3502, 1, 18.5138],
  [1704111600, 42656.4828, 1, 18.5252],
  [1704111900, 42685.1466, 1, 18.539],
  [1704112200, 42684.9451, 1, 18.5315],
  [1704112500, 42688.9472, 1, 18.5351],
  [1704112800, 42760.2751, 1, 18.5409],
  [1704113100, 42758.3065, 1, 18.5323],
  [1704113400, 42718.5401, 1, 18.5326],
  [1704113700, 42698.4739, 1, 18.5275],
  [1704114000, 42658.2205, 1, 18.5429],
  [1704114300, 42651.8628, 1, 18.5449],
  [1704114600, 42682.5842, 1, 18.5417],
  [1704114900, 42705.8538, 1, 18.5354],
  [1704115200, 42706.2475, 1, 18.526],
  [1704115500, 42721.7553, 1, 18.5208],
  [1704115800, 42720.0772, 1, 18.5166],
  [1704116100, 42701.8932, 1, 18.5069],
  [1704116400, 42706.1691, 1, 18.5192],
  [1704116700, 42733.8068, 1, 18.516],
  [1704117000, 42721.7559, 1, 18.524],
  [1704117300, 42723.5653, 1, 18.5306],
  [1704117600, 42722.5097, 1, 18.5263],
  [1704117900, 42647.9519, 1, 18.5503],
  [1704118200, 42670.5953, 1, 18.5486],
  [1704118500, 42650.3755, 1, 18.5445],
  [1704118800, 42661.8927, 1, 18.5328],
  [1704119100, 42621.7949, 1, 18.5391],
  [1704119400, 42617.51, 1, 18.538],
  [1704119700, 42655.8882, 1, 18.5067],
  [1704120000, 42630.8647, 1, 18.513],
  [1704120300, 42647.9306, 1, 18.5116],
  [1704120600, 42610.1395, 1, 18.5204],
  [1704120900, 42627.3885, 1, 18.5231],
  [1704121200, 42618.0694, 1, 18.52],
  [1704121500, 42601.4924, 1, 18.5147],
  [1704121800, 42644.7889, 1, 18.5278],
  [1704122100, 42654.7951, 1, 18.5231],
  [1704122400, 42651.9347, 1, 18.5301],
  [1704122700, 42720.8629, 1, 18.511],
  [1704123000, 42687.8325, 1, 18.5029],
  [1704123300, 42646.2989, 1, 18.4826],
  [1704123600, 42660.4638, 1, 18.4558],
  [1704123900, 42805.8023, 1, 18.481],
  [1704124200, 42786.4683, 1, 18.4866],
  [1704124500, 42790.5355, 1, 18.4914],
  [1704124800, 42789.6982, 1, 18.4828],
  [1704125100, 42771.5272, 1, 18.4821],
  [1704125400, 42820.6528, 1, 18.4806],
  [1704125700, 42840.1494, 1, 18.4874],
  [1704126000, 42803.8267, 1, 18.4725],
  [1704126300, 42704.664, 1, 18.4826],
  [1704126600, 42723.0191, 1, 18.4806],
  [1704126900, 42726.5778, 1, 18.4806],
  [1704127200, 42767.7947, 1, 18.4809],
  [1704127500, 42777.6865, 1, 18.4973],
  [1704127800, 42762.5496, 1, 18.488],
  [1704128100, 42725.4695, 1, 18.4752],
  [1704128400, 42725.6192, 1, 18.49],
  [1704128700, 42758.375, 1, 18.4997],
  [1704129000, 42767.495, 1, 18.4954],
  [1704129300, 42781.2826, 1, 18.4687],
  [1704129600, 42758.2641, 1, 18.4739],
  [1704129900, 42753.5386, 1, 18.4747],
  [1704130200, 42740.2808, 1, 18.4561],
  [1704130500, 42722.9224, 1, 18.4583],
  [1704130800, 42717.0772, 1, 18.4677],
  [1704131100, 42734.4178, 1, 18.4851],
  [1704131400, 42802.2043, 1, 18.5077],
  [1704131700, 42821.0495, 1, 18.4973],
  [1704132000, 42825.5699, 1, 18.4998],
  [1704132300, 42935.582, 1, 18.5167],
  [1704132600, 43000.9914, 1, 18.5039],
  [1704132900, 43106.9827, 1, 18.5028],
  [1704133200, 43096.3614, 1, 18.5141],
  [1704133500, 43123.0109, 1, 18.4908],
  [1704133800, 43076.948, 1, 18.4803],
  [1704134100, 43050.319, 1, 18.5027],
  [1704134400, 43085.2314, 1, 18.5069],
  [1704134700, 43152.6586, 1, 18.5279],
  [1704135000, 43141.2469, 1, 18.5252],
  [1704135300, 43144.9373, 1, 18.5273],
  [1704135600, 43119.9482, 1, 18.5161],
  [1704135900, 43138.0144, 1, 18.5358],
  [1704136200, 43171.4619, 1, 18.5364],
  [1704136500, 43182.5881, 1, 18.5673],
  [1704136800, 43184.5187, 1, 18.5935],
  [1704137100, 43209.6653, 1, 18.5801],
  [1704137400, 43274.7224, 1, 18.5784],
  [1704137700, 43360.912, 1, 18.595],
  [1704138000, 43402.471, 1, 18.6124],
  [1704138300, 43386.2447, 1, 18.5893],
  [1704138600, 43476.721, 1, 18.5786],
  [1704138900, 43528.2742, 1, 18.5957],
  [1704139200, 43522.2765, 1, 18.614],
  [1704139500, 43673.1337, 1, 18.6415],
  [1704139800, 43697.3412, 1, 18.6233],
  [1704140100, 43667.1228, 1, 18.6171],
  [1704140400, 43611.5066, 1, 18.6437],
  [1704140700, 43623.2883, 1, 18.6546],
  [1704141000, 43694.467, 1, 18.6474],
  [1704141300, 43686.7581, 1, 18.643],
  [1704141600, 43668.9651, 1, 18.6591],
  [1704141900, 43775.6965, 1, 18.6942],
  [1704142200, 43776.1974, 1, 18.6768],
  [1704142500, 43693.5382, 1, 18.6594],
  [1704142800, 43702.9381, 1, 18.6697],
  [1704143100, 43741.8677, 1, 18.6702],
  [1704143400, 43711.5008, 1, 18.658],
  [1704143700, 43732.0929, 1, 18.6754],
  [1704144000, 43760.3497, 1, 18.6903],
  [1704144300, 43688.5851, 1, 18.6752],
  [1704144600, 43654.5042, 1, 18.6603],
  [1704144900, 43614.3161, 1, 18.6536],
  [1704145200, 43542.3101, 1, 18.6362],
  [1704145500, 43489.411, 1, 18.6188],
  [1704145800, 43524.5985, 1, 18.6439],
  [1704146100, 43600.751, 1, 18.6534],
  [1704146400, 43613.2287, 1, 18.658],
  [1704146700, 43571.3949, 1, 18.6428],
  [1704147000, 43564.0704, 1, 18.6521],
  [1704147300, 43525.9619, 1, 18.6503],
  [1704147600, 43450.7261, 1, 18.6533],
  [1704147900, 43481.5668, 1, 18.6684],
  [1704148200, 43473.3757, 1, 18.6472],
  [1704148500, 43502.1691, 1, 18.6505],
  [1704148800, 43530.7952, 1, 18.6411],
  [1704149100, 43456.134, 1, 18.6317],
  [1704149400, 43478.4075, 1, 18.6414],
  [1704149700, 43470.1672, 1, 18.6354],
  [1704150000, 43536.8991, 1, 18.6383],
  [1704150300, 43689.4188, 1, 18.6662],
  [1704150600, 43658.9299, 1, 18.6689],
  [1704150900, 43682.2923, 1, 18.6876],
  [1704151200, 43747.425, 1, 18.6827],
  [1704151500, 43821.5165, 1, 18.6994],
  [1704151800, 43994.3784, 1, 18.7276],
  [1704152100, 44030.0429, 1, 18.7288],
  [1704152400, 44069.4863, 1, 18.7422],
  [1704152700, 44102.5893, 1, 18.786],
  [1704153000, 44090.8796, 1, 18.7867],
  [1704153300, 44145.7144, 1, 18.7825],
  [1704153600, 44184.4839, 1, 18.7804],
  [1704153900, 44254.986, 1, 18.8429],
  [1704154200, 44400.8826, 1, 18.8655],
  [1704154500, 44655.8921, 1, 18.9595],
  [1704154800, 44573.5469, 1, 18.831],
  [1704155100, 44778.7612, 1, 18.837],
  [1704155400, 44639.5965, 1, 18.8117],
  [1704155700, 44677.9353, 1, 18.7644],
  [1704156000, 44590.0392, 1, 18.7857],
  [1704156300, 44751.2791, 1, 18.8058],
  [1704156600, 44759.9264, 1, 18.7863],
  [1704156900, 44839.1646, 1, 18.8507],
  [1704157200, 45091.4672, 1, 18.8821],
  [1704157500, 45142.7214, 1, 18.8931],
  [1704157800, 45210.4204, 1, 18.893],
  [1704158100, 44878.6144, 1, 18.843],
  [1704158400, 44962.0218, 1, 18.8456],
  [1704158700, 44979.4962, 1, 18.8325],
  [1704159000, 44967.2069, 1, 18.8284],
  [1704159300, 44915.7364, 1, 18.822],
  [1704159600, 44836.5547, 1, 18.8417],
  [1704159900, 44825.2566, 1, 18.8283],
  [1704160200, 44751.0965, 1, 18.8443],
  [1704160500, 44782.0226, 1, 18.8653],
  [1704160800, 44878.401, 1, 18.8771],
  [1704161100, 44957.1359, 1, 18.8901],
  [1704161338, 44944.82092749195, 1, 18.884930438572304],
];
